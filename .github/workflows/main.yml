name: CI

on: [pull_request, workflow_dispatch]

jobs:
  phpstan:
    name: CI PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - 7.4
          - 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run phpstan
        run: composer phpstan


  phpcs:
    name: CI Code sniffer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - 7.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run code-sniffer
        run: composer phpcs


  phpunit:
    name: CI Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        composer-arg:
          - "install"
          - "update --prefer-lowest"
        php-version:
          - 7.4
          - 8.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, sockets${{ matrix.php-version == '8.1' && matrix.composer-arg == 'install' && ', xdebug' || '' }}

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer ${{ matrix.composer-arg }} --prefer-dist

      - name: Run tests
        run: composer test
        if: matrix.php-version != '8.1' && matrix.composer-arg != 'install'

      - name: Run tests with coverage
        run: composer test-with-coverage
        if: matrix.php-version == '8.1' && matrix.composer-arg == 'install'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        if: matrix.php-version == '8.1' && matrix.composer-arg == 'install'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonar.nice.com"
